# Test info

- Name: בדיקה מלאה: מעבר לניהול הסקר ואז למסך עונות
- Location: C:\Users\User\Downloads\playwright-ts\tests\example.spec.ts:7:5

# Error details

```
Error: locator.waitFor: Target page, context or browser has been closed
Call log:
  - waiting for locator('#layout > div > div.app_content > div > main > div > div:nth-child(22) > div.questions_section > div:nth-child(10) > div')

    at MainPage.fillEventDetails (C:\Users\User\Downloads\playwright-ts\pages\MainPage.ts:110:25)
    at C:\Users\User\Downloads\playwright-ts\tests\example.spec.ts:33:5
    at C:\Users\User\Downloads\playwright-ts\tests\example.spec.ts:32:3
```

# Test source

```ts
   10 |     readonly seasonDropdown: Locator;
   11 |     readonly startDateButton: Locator;
   12 |     readonly endDateButton: Locator;
   13 |     readonly seasonOption: Locator;
   14 |     readonly recruit: Locator;
   15 |     readonly recruitOption: Locator;
   16 |     readonly mateS: Locator;
   17 |     readonly mateC: Locator;
   18 |     readonly pikud1: Locator; 
   19 |     readonly list2: Locator;
   20 |     readonly ogda1: Locator;
   21 |     readonly end1: Locator;
   22 |     readonly end2: Locator;
   23 |     readonly final: Locator;
   24 |
   25 |
   26 |
   27 |     constructor(page: Page) {
   28 |         this.page = page;
   29 |         this.eventManagementButton = page.locator('input[value="1\u00A0\u00A0ניהול אירועים"]');
   30 |         this.createNewEventButton = page.locator('button:has-text("להקמת אירוע חדש")');
   31 |         this.eventNameInput = page.locator('div.text-box[data-label-val="שם האירוע"] input[type="text"]');
   32 |         this.seasonDropdown = page.locator('div.dropdown.dropdown-select[label="No-Text period"]');
   33 |         this.seasonOption = page.locator('span:has-text("עונת 1")');
   34 |         this.recruit = page.locator('div.dropdown-btn.text-box[data-label-val="No-Text pikud"]');
   35 |         this.recruitOption = page.locator('span:has-text("כללי")');
   36 |         this.mateS = page.locator('div.dropdown-btn.text-box[data-label-val="הגדרת סוג היחידה לאירוע "]');
   37 |         this.mateC = page.locator('span:has-text("מטה")');
   38 |         this.pikud1 = page.locator(
   39 |             'li[role="treeitem"][aria-label="פיקוד 1"] >> div[role="checkbox"]'
   40 |           );
   41 | // במקום זה:
   42 |        this.list2 = page.locator(
   43 |     'div.col-4:has(div.section_title:has-text("בחירת יחידות מאגדות להצגת דוח מילוי"))'
   44 |   );
   45 |
   46 |   // מתוך אותו קונטיינר – מגדירים את ה־checkbox של אוגדה 1
   47 |        this.ogda1 = this.list2.locator(
   48 |     'li[role="treeitem"][aria-label="אוגדה 1"] >> div.dx-checkbox-container'
   49 |   );
   50 |
   51 |
   52 |
   53 |
   54 |         this.startDateButton = page.locator(
   55 |             '#layout > div > div.app_content > div > main > div > div:nth-child(9) > div > div:nth-child(1) > div > div.dx-dropdowneditor-input-wrapper > div > div.dx-texteditor-buttons-container > div.dx-widget.dx-button-mode-contained.dx-button-normal.dx-rtl.dx-dropdowneditor-button'
   56 |         );
   57 |         this.endDateButton = page.locator(
   58 |             '#layout > div > div.app_content > div > main > div > div:nth-child(9) > div > div:nth-child(2) > div > div.dx-dropdowneditor-input-wrapper > div > div.dx-texteditor-buttons-container > div.dx-widget.dx-button-mode-contained.dx-button-normal.dx-rtl.dx-dropdowneditor-button'
   59 |         );
   60 |
   61 |
   62 |
   63 |         this.end1 = page.locator(('#layout > div > div.app_content > div > main > div > div:nth-child(22) > div.questions_section > div:nth-child(10) > div'));
   64 |         this.end2 = page.locator('div.questions_section >> div.checkbox >> input[id="10"]');
   65 |         this.final = page.locator('div.q-tab__label:has-text("ניהול פוטנציאל")');
   66 |
   67 |
   68 |
   69 |     }
   70 |
   71 |     async navigateToEventCreation() {
   72 |         await this.eventManagementButton.click();
   73 |         await this.createNewEventButton.click();
   74 |        
   75 |     }
   76 |
   77 |     async fillEventDetails() {
   78 |         await this.eventNameInput.waitFor({ state: 'visible' });
   79 |         await this.eventNameInput.click({ force: true });
   80 |         await this.page.waitForTimeout(200); // זמן קטן לייצוב
   81 |         await this.eventNameInput.fill(''); // לנקות את השדה
   82 |         await this.page.waitForTimeout(200); // עוד זמן קטן
   83 |         await this.page.keyboard.type('מרינה 2025', { delay: 150 });
   84 |         await expect(this.eventNameInput).toHaveValue('מרינה 2025', { timeout: 5000 });
   85 |
   86 |
   87 |         await this.seasonDropdown.click();
   88 |         await this.seasonOption.click();
   89 |         // הוספת בחירת עונה כאן אם צריך
   90 |
   91 |         // בחירת תאריך התחלה
   92 |         await this.startDateButton.click();
   93 |         const startDate = this.page.locator('[data-value="2025/04/06"]');
   94 |         await startDate.click();    // בחירת תאריך סיום
   95 |         await this.endDateButton.click();
   96 |         await this.page.keyboard.press('Enter');
   97 |         await this.recruit.click();
   98 |         await this.recruitOption.click();
   99 |         logger.info('we came to the end');
  100 |         await this.mateS.click();
  101 |         logger.info('worked');
  102 |         await this.mateC.click();
  103 |         await this.pikud1.click();
  104 |         logger.info('פיקוד אחד נלחץ');
  105 |         await this.page.waitForTimeout(1000)
  106 |         await this.list2.scrollIntoViewIfNeeded();
  107 |         await this.ogda1.scrollIntoViewIfNeeded();
  108 |         await this.ogda1.click({ force: true });
  109 |         logger.info('אוגדה 1 נלחצה');
> 110 |         await this.end1.waitFor({ state: 'attached' }); // מחכה שהאלמנט יהיה ב-DOM
      |                         ^ Error: locator.waitFor: Target page, context or browser has been closed
  111 |         await this.page.waitForTimeout(500); // נותן שנייה ל-overlay להיעלם
  112 |         await this.end1.click({ force: true }); // לוחץ בכוח
  113 |       
  114 |         logger.info('אופציה 1 נלחצה');
  115 |         await this.page.waitForTimeout(2000)
  116 |         await this.end2.click({ force: true }); // לוחץ בכוח
  117 |        
  118 |
  119 |         
  120 |         
  121 |         // מחכה 3 שניות (3000 מילישניות)
  122 |       
  123 |
  124 |     }
  125 | }
  126 |
  127 |
```